{"meta":{"title":"Alice的博客","subtitle":"","description":"Goals determine what you going to be!","author":"Alice","url":"http://delaprada.com","root":"/"},"pages":[{"title":"categories","date":"2019-12-25T01:15:45.000Z","updated":"2019-12-26T12:39:38.305Z","comments":false,"path":"categories/index.html","permalink":"http://delaprada.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-12-25T01:50:31.000Z","updated":"2019-12-26T12:39:54.263Z","comments":false,"path":"tags/index.html","permalink":"http://delaprada.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"hexo常用指令及美化博客页面","slug":"hexo常用指令及美化博客页面","date":"2019-12-26T09:54:44.000Z","updated":"2019-12-26T12:49:13.568Z","comments":true,"path":"2019/12/26/hexo常用指令及美化博客页面/","link":"","permalink":"http://delaprada.com/2019/12/26/hexo%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E5%8F%8A%E7%BE%8E%E5%8C%96%E5%8D%9A%E5%AE%A2%E9%A1%B5%E9%9D%A2/","excerpt":"","text":"hexo常用命令Hexo的命令总体来说比较简单，安装成功之后只需要记住常用的四种即可。在当前blog文件夹根目录下右键点击git bash： hexo s：server启动服务器 hexo clean：clean清除缓存文件（db.json）和已生成的静态文件（public） hexo generate或hexo g：generate生成静态文件 hexo deploy或hexo d：deploy部署网站，部署网站前需预先生成静态文件 一般更改完后执行三条指令：hexo clean，hexo generate，hexo deploy即可（按顺序） hexo各种美化侧栏增加标签和分类页面创建标签页面 创建标签页面 1hexo new page tags 基本设置 123title: tagsdate: 2017-12-02 21:01:24type: &quot;tags&quot; 创建分类页面 创建分类页面 1hexo new page categories 基本设置 123title: categoriesdate: 2017-12-02 21:01:24type: &quot;categories&quot; 设置站点图标 先在images文件夹下放入你的图标 在主题配置页面_config.yml中搜索favicon，找到以下位置，并将路径修改为你的图标： 部署之后就可以看到效果了，查看效果： 设置头像 在images文件夹中放入你的头像图片 在主题配置页面中修改avatar为你的图片地址： 首页文章不显示全文只显示摘要修改/themes/next/_config.yml主题配置文件中： 1234567scroll_to_more: true #如果文章有摘要,会自动滚动到摘要下面save_scroll: true #通过cookies来缓存阅读进度excerpt_description: true #自动摘录描述作为序言auto_excerpt: #设置阅读全文 enable: true length: 150 #摘要次数read_more_btn: true #阅读全文按钮 修改文章底部的带#的标签修改模板/themes/next/layout/_macro/post.swig，搜索rel=&quot;tag&quot;&gt;#，将#改为&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;（如果想换成其他图标可到font-awesome中文网查看） 在每篇文章末尾统一添加“本文结束”标记在\\themes\\next\\layout\\_macro中新建passage-end-tag.swig，并加入以下内容： 12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style=\"text-align:center;color: #ccc;font-size:15px;\"&gt;-------本&amp;nbsp;文&amp;nbsp; 结&amp;nbsp;束&amp;nbsp;&amp;nbsp;&lt;i class=\"fa fa-heart\" aria-hidden=\"true\"&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;感 &amp;nbsp;谢&amp;nbsp;您&amp;nbsp;的&amp;nbsp;阅&amp;nbsp;读-------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 接着打开\\themes\\next\\layout\\_macro\\post.swig文件，在post-body标签之后，post-footer标签之前，添加如下代码： 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &#39;passage-end-tag.swig&#39; %&#125; &#123;% endif %&#125;&lt;&#x2F;div&gt; 修改网页背景颜色和侧栏上方brand的颜色打开themes/next/layout/source/css/_custom/custom.styl，加入以下代码： 12345678910111213141516171819202122&#x2F;&#x2F;修改网页背景颜色body &#123; background-color: #F0F8FF&#125;#footer a &#123; color:#eee;&#125;&#x2F;&#x2F; 修改网站头部颜色.headband &#123; height: 3px; background: #ADD8E6;&#125;.site-meta &#123; padding: 20px 0; color: #fff; background: #ADD8E6;&#125;.site-title &#123; color: #fff;&#125; 侧边栏社交设置和友情链接修改主题配置页面：themes/next/_config.yml： 12345678910111213141516171819202122232425262728293031site_state: true# Social Links# Usage: `Key: permalink || icon`# Key is the link label showing to end users.# Value before `||` delimeter is the target permalink.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.social: CSDN: https://blog.csdn.net/weixin_41973410 || copyright GitHub: https://github.com/delaprada || githubsocial_icons: #这里是上面社交链接的对应图标 enable: true CSDN: copyright Github: github icons_only: false transition: true# Follow me on GitHub banner in right-top corner.# Usage: `permalink || title`# Value before `||` delimeter is the target permalink.# Value after `||` delimeter is the title and aria-label name.#github_banner: https://github.com/Fitz1318 || Follow me on GitHub# Blog rolls #这里时设置一些相关链接 我这里设置了一些推荐阅读的网站#links_icon: linklinks_title: 实用网站#links_layout: blocklinks_layout: inlinelinks: W3Cschool: http://www.w3school.com.cn/","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://delaprada.com/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://delaprada.com/tags/Hexo/"}]},{"title":"hexo categories和tags页面不显示解决办法","slug":"hexo-categories和tags页面不显示解决办法","date":"2019-12-25T02:53:13.000Z","updated":"2019-12-26T09:55:44.357Z","comments":true,"path":"2019/12/25/hexo-categories和tags页面不显示解决办法/","link":"","permalink":"http://delaprada.com/2019/12/25/hexo-categories%E5%92%8Ctags%E9%A1%B5%E9%9D%A2%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/","excerpt":"","text":"官网也有给出具体步骤，但是有坑Hexo官网教程 第一步 在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page指令新建一个页面，命名为 categories ：12cd hexo //根目录hexo new page categories //tags和这个操作一致 第二步 找到新建的页面，添加type新建的页面一般在source/categories/index.md中，添加以下内容： 1234title: categoriesdate: 2019-12-25 09:15:45type: \"categories\"layout: \"categories\" 第三步 给你的页面添加分类找到你的页面，在页面上方添加如下内容 123456title: 利用gitpages+hexo搭建自己的博客date: 2019-12-25 09:12:55categories:- Hexotags:- 前端 但此时部署到github上后，打开网页点击分类和标签页面还是出现404！ 第四步 解决方案实属官方坑人系列！！主题配置文件_config.yml中的menu：把 / 后面的空格全部去掉（刚开始的时候默认后面是加了空格导致点击页面出现404）","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://delaprada.com/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://delaprada.com/tags/Hexo/"}]},{"title":"利用gitpages+hexo搭建自己的博客","slug":"利用gitpages+hexo搭建自己的博客","date":"2019-12-25T01:12:55.000Z","updated":"2019-12-26T09:55:52.346Z","comments":true,"path":"2019/12/25/利用gitpages+hexo搭建自己的博客/","link":"","permalink":"http://delaprada.com/2019/12/25/%E5%88%A9%E7%94%A8gitpages+hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"前言从开始开始着手搭建到完成大概花了一个下午的时间，采坑不少，在此记录一下 第一步 准备工作node.js下载好，github有已注册的账号在github中新建一个repository，命名为：你的github名称.github.io（下面是我的仓库名称）： （有些博客直接让我们fork它们的项目，个人感觉这么做不太好，很多东西自己动手做一遍更好） 第二步 安装HexoHexo就是一个博客框架，官网上也有安装教程Hexo官网 step1：windows系统鼠标右键git bash，输入两个安装指令： 12npm install hexo-cli -g &#x2F;&#x2F;用于安装hexonpm install hexo-deployer-git --save &#x2F;&#x2F;用于安装hexo部署到git page的deployer step2：创建hexo文件夹hexo安装完成之后，在电脑中新建一个hexo文件夹：右键点击git bash，输入两个命令： 12hexo initnpm install &#x2F;&#x2F;安装所有package.json里的包 执行完成后，hexo文件夹中会多出一些文件： 如果想看本地效果的话，执行以下指令： 12hexo generate &#x2F;&#x2F;自动将md文件生成静态html，css文件hexo server &#x2F;&#x2F;启动本地hexo服务器（localhost:4000） 打开 localhost:4000就可以看到页面啦： （页面会不太一样，我的配了一下主题） 第三步 了解hexo文件夹中的_config.ymlhexo文件夹中比较重要的文件是：_config.yml： 它是一个全局配置文件，包括和github上传链接都在这里配置，例如title之类的： 第四步 本地上传到githubstep1：执行命令，安装deploy.git插件 1npm install hexo-deployer-git --save step2：在主题配置文件_config.yml中修改仓库地址，在_config.yml最下面一行（注意每个冒号后面都有一个空格） step3：配置提交github认证方式执行指令： 1hexo d 直接提交到github仓库中，如果没有认证github和本地的关系，会提示输入用户名和密码 此时打开github的项目会发现原本是空的项目现在有了刚刚上传的文件 第五步 添加域名在阿里云中购买了一个.com的域名（加优惠一年23块，虽然比其他贵一些但是觉得.com好听一些(#^ . ^#)） step1：cmd ping一下github.io获得真实ip地址 step2：然后再域名操作栏点击解析，添加记录 注意要两个都要添加（之前一开始只添加了www不知道为啥就显示不出来） step3：去hexo文件夹的source目录下新建名为CNAME的文件，添加文件内容为你刚才购买的域名，不要添加www step4：然后部署 1231. hexo clean2. hexo generate3. hexo deploy （每次做出更改建议都部署一遍） step5：点击设置，拉到下面，在custom domain中输入你的域名。如果上面的信息不是显示Your site is published at https://xxx.com/，而是dns的之类的错误，可能是域名还没有实名认证 输入域名，成功：","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://delaprada.com/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://delaprada.com/tags/Hexo/"}]}]}